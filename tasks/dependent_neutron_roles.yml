---
# Copyright 2018, SUSE Linux GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Include apt_package_pinning role
  include_role:
    name: apt_package_pinning
  vars:
    apt_pinned_packages: "{{ ovs_nsh_support | ternary(ovs_nsh_apt_pinned_packages, omit) }}"
  when:
    - ansible_pkg_mgr == 'apt'

- name: Include etcd role
  include_role:
    name: etcd
  vars:
    etcd_install_type: proxy
  when:
    - "neutron_plugin_type in ['ml2.calico', 'ml2.dragonflow']"
    - "group_names | intersect([
         neutron_services['calico-dhcp-agent']['group'],
         neutron_services['calico-felix']['group'],
         neutron_services['dragonflow-controller-agent']['group'],
         neutron_services['neutron-server']['group']
       ]) | length > 0"

- name: Include ODL role
  include_role:
    name: opendaylight
  vars:
    install_method: "{{ opendaylight_install_method }}"
    extra_features: "{{ opendaylight_extra_features }}"
    nb_rest_port: "{{ opendaylight_port | default('8180') }}"
  when:
     - neutron_plugin_type == "ml2.opendaylight"
     - "'opendaylight' in group_names"
- name: Include redis role
  include_role: 
    name: redis-role
  serial: 1
  when:
    - neutron_plugin_type == "ml2.dragonflow"
  with_items: "{{ redis_all }}"
  when: "hostvars[host_item].inventory_hostname == inventory_hostname"
  vars:
    redis_conf_path: "/etc/redis"
    redis_mode: cluster
    redis_cluster_replicas: 0
    redis_version: 4.0.8
    redis_confs:
      cluster-node-timeout: "2000"
      cluster-enabled: "yes"
      cluster-config-file: node.conf
      port: "4001"
      bind: "0.0.0.0"
      protected-mode: "no"
      pidfile: "/var/run/redis/redis.pid"
      loglevel: "notice"
      logfile: "/var/log/redis/redis.log"
      databases: "16"
      rdbcompression: "yes"
      rdbchecksum: "yes"
      supervised: "systemd"
      slave-serve-stale-data: "yes"
      slave-read-only: "yes"
      stop-writes-on-bgsave-error: "yes"
      appendonly: "yes"
      appendfilename: "appendonly-db.aof"
      dbfilename: "dump.rdb"
      daemonize: "yes" # mandatory for cluster node
